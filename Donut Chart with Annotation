# üìä Hospitality Revenue Insights - Multiple Chart Outputs

import pandas as pd
import numpy as np
import plotly.express as px
from datetime import datetime, timedelta

print("Simulating hospitality revenue data...")

# Common data generation
start_date = datetime(2023, 1, 1)
end_date = datetime(2024, 12, 31)
dates = pd.date_range(start_date, end_date)

data = []
for date in dates:
    base_revenue = 20000 + 5000 * np.sin(date.month * np.pi / 6) + 100 * np.random.randn()
    if date.weekday() >= 5:
        base_revenue *= 1.15
    if 6 <= date.month <= 8:
        base_revenue *= 1.25
    elif date.month in [12, 1]:
        base_revenue *= 1.10
    data.append({'date': date, 'revenue': base_revenue, 'year': date.year})

df = pd.DataFrame(data)
df['month_year'] = df['date'].dt.strftime('%b %Y')

# 4Ô∏è‚É£ Fourth Chart: Donut Chart with Annotation
# ------------------------------------
monthly_revenue2 = df.groupby('month_year')['revenue'].sum().reset_index()
top_month = monthly_revenue2.loc[monthly_revenue2['revenue'].idxmax()]

fig4 = px.pie(
    monthly_revenue2,
    values='revenue',
    names='month_year',
    title='4Ô∏è‚É£ Revenue Share + Highlighted Top Month',
    hole=0.3,
    color_discrete_sequence=px.colors.qualitative.Pastel
)

fig4.add_annotation(
    x=0.5, y=-0.15, xref='paper', yref='paper',
    text=f"üî• Highest revenue in <b>{top_month['month_year']}</b>: ‚Çπ{top_month['revenue']:,.0f}",
    showarrow=False,
    font=dict(size=14, color='red')
)

fig4.update_layout(
    title={
        'text': "4Ô∏è‚É£ Hospitality Revenue Share with Highlights<br><sup>Peak revenues during summer and holiday seasons</sup>",
        'y':0.95,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'
    }
)

fig4.update_traces(
    textinfo='percent+label',
    hovertemplate='%{label}<br>Revenue: ‚Çπ%{value:,.0f}<br>Percentage: %{percent}',
    textfont_size=12
)

fig4.show()
